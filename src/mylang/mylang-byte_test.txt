
let counter1 = 0;

while (counter1 < 10) {
	let counter2 = 0;

	while (counter2 < 10) {
		std.print(counter1, counter2);
		counter2 = counter2 + 1;
	}

	counter1 = counter1 + 1;
}

if (2 > 3) {
	std.print(2);
} else {
	std.print(3);
}

let ifr = if (2 > 3) { 2 } else { 3 };


let func1 = |a, b| {
	return a + b;
};

let c2 = 55;

let func2 = |a, b_func| {
	return c2 + a + b_func(func1(a, c2), a);
};

let a = 33;
let b = 44;
let c = a + b;

std.print(func1(b, c) + func2(c, func1));


exports.my_update = || {
	let sw = Example.ScreenWidth();
	let sh = Example.ScreenHeight();

	let rand = Example.rand;
	let Pixel = Example.olc.Pixel;
	let Draw = Example.Draw;

	let mut x = 0;
	while (x < sw)
	{
		let mut y = 0;
		while (y < sh)
		{
			let p = Pixel(
				rand() % 255,
				rand() % 255,
				rand() % 255
			);

			Draw(x, y, p);

			y = y + 1;
		}

		x = x + 1;
	}
};

